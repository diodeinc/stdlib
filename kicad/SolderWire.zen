load("../config.zen", "config_properties")

# -----------------------------------------------------------------------------
# Component types
# -----------------------------------------------------------------------------

Size = enum(
    "SMD_1x2mm",  # Small SMD pad
    "SMD_5x10mm",  # Large SMD pad
)

# Backwards compatibility
SolderWireSize = Size

# -----------------------------------------------------------------------------
# Component parameters
# -----------------------------------------------------------------------------

# Required
size = config("size", Size, default=Size("SMD_1x2mm"), convert=Size)

# Properties â€“ combined and normalized
properties = config_properties(
    properties={
        "size": size,
    },
    exclude_from_bom=True,
    exclude_from_pos_files=True,
)

# -----------------------------------------------------------------------------
# IO ports
# -----------------------------------------------------------------------------

P1 = io("P1", Net)

# -----------------------------------------------------------------------------
# Helper functions
# -----------------------------------------------------------------------------


def _symbol(size: SolderWireSize):
    return {
        "library": "@kicad-symbols/Connector_Generic.kicad_sym",
        "name": "Conn_01x01",
    }


def _footprint(size: SolderWireSize) -> str:
    """Returns the appropriate solder wire pad footprint based on the size."""
    footprints = {
        SolderWireSize("SMD_1x2mm"): "@kicad-footprints/Connector_Wire.pretty/SolderWirePad_1x01_SMD_1x2mm.kicad_mod",
        SolderWireSize("SMD_5x10mm"): "@kicad-footprints/Connector_Wire.pretty/SolderWirePad_1x01_SMD_5x10mm.kicad_mod",
    }

    if size not in footprints:
        error("Invalid size: " + str(size))
    return footprints[size]


# -----------------------------------------------------------------------------
# Component definition
# -----------------------------------------------------------------------------

Component(
    name="SW",
    symbol=Symbol(**_symbol(size)),
    footprint=File(_footprint(size)),
    prefix="P",
    pins={"Pin_1": P1},
    properties=properties,
)
