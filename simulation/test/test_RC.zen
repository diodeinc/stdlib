"""Test for Spice model of Resistor.

pcb sim generics/spice/test/test_SpiceRC.zen \
    --setup generics/spice/test/test_SpiceRC.spice \
    -o - | ngspice -i
"""

load("../../../interfaces.zen", "Ground", "Power")
load("../../../units.zen", "Capacitance", "Frequency", "Resistance", "unit")

Resistor = Module("../../Resistor.zen")
Capacitor = Module("../../Capacitor.zen")

VCC = Power()
PROBE = Net("PROBE")
GND = Ground()

def rc_lowpass(name, frequency: Frequency | str, GND: Ground, IN: Net, OUT: Net, R = "100k Ohms", package: str = "0603", order: int = 1):
    """Second order lowpass filter using RC topology, assuming equal resistors and capacitors"""

    f = unit(frequency, Frequency)
    R = unit(R, Resistance)
    C = Capacitance(value = 1 / (2 * 3.1415 * R.value * f.value))

    R1 = Resistance(value = R.value)
    C1 = Capacitance(value = C.value)
    R2 = Resistance(value = R.value)
    C2 = Capacitance(value = C.value)

    R1_str = R1.__str__(R1) + " Ohm"
    C1_str = C1.__str__(C1) + " F"
    R2_str = R2.__str__(R2) + " Ohm"
    C2_str = C2.__str__(C2) + " F"

    STAGES = [IN] + [Net("STAGE" + str(i + 1)) for _ in range(order - 1)] + [OUT]

    for i in range(order):
        STAGE_IN, STAGE_OUT = STAGES[i], STAGES[i + 1]
        Resistor(name = name + "_R" + str(i + 1), value = R1_str, package = package, P1 = STAGE_IN, P2 = STAGE_OUT)
        Capacitor(name = name + "_C" + str(i + 1), value = C1_str, package = package, P1 = STAGE_OUT, P2 = GND)

rc_lowpass("RC_LOWPASS", "10kHz", GND, VCC.NET, PROBE, R = "100k Ohms", package = "0603", order = 1)

# pcb:sch RC_LOWPASS_C1.C x=194.5800 y=-1.0000 rot=0
# pcb:sch RC_LOWPASS_R1.R x=115.8400 y=-89.9000 rot=270
# pcb:sch GND.1 x=202.2000 y=126.0000 rot=0
# pcb:sch VCC.1 x=-21.3200 y=-89.9000 rot=0
