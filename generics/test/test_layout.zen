"""Comprehensive test for all generic components."""

load("/Users/davide/src/diodeinc/packages/stdlib/generics/MountingHole.zen", "diameter")

# Load all generic components
load("../../properties.zen", "Layout")

Capacitor = Module("../Capacitor.zen")
Resistor = Module("../Resistor.zen")
Led = Module("../Led.zen")
Crystal = Module("../Crystal.zen")
Inductor = Module("../Inductor.zen")
FerriteBead = Module("../FerriteBead.zen")
MountingHole = Module("../MountingHole.zen")

# Capacitors
for package in Capacitor.Package.values():
    Capacitor(name = "C_" + str(package), value = "100nF", voltage = "16V", dielectric = "X7R", package = package, P1 = Net("P1"), P2 = Net("P2"))

# Resistors
for package in Resistor.Package.values():
    Resistor(name = "R_" + str(package), value = "100kOhm", package = package, P1 = Net("P1"), P2 = Net("P2"))

# Inductors
for package in Inductor.Package.values():
    Inductor(name = "L_" + str(package), value = "100uH", package = package, P1 = Net("P1"), P2 = Net("P2"))

# Ferrite Beads
for package in FerriteBead.Package.values():
    FerriteBead(name = "FB_" + str(package), package = package, P1 = Net("P1"), P2 = Net("P2"))

# LEDs
for package in Led.Package.values():
    Led(name = "D_" + str(package), color = "red", package = package, A = Net("LED_A"), K = Net("LED_K"))

# Crystals 2Pin
for package in [package for package in Crystal.Package.values() if "2Pin" in str(package)]:
    Crystal(name = "Y_" + str(package), package = package, XIN = Net("XIN_" + str(package)), XOUT = Net("XOUT_" + str(package)))

# Crystals 4Pin
for package in [package for package in Crystal.Package.values() if "4Pin" in str(package)]:
    Crystal(name = "Y" + str(package), package = package, XIN = Net("XIN_" + str(package)), XOUT = Net("XOUT_" + str(package)), GND = Net("GND_" + str(package)))

# Mounting Holes
for diameter in MountingHole.Diameter.values():
    for standard in MountingHole.Standard.values():
        for plating in MountingHole.Plating.values():
            MountingHole(name = "MH_" + str(diameter) + "_" + str(standard) + "_" + str(plating), diameter = diameter, standard = standard, plating = plating)

Layout(
    name = "C1",
    path = "build/preview",
)
