load("../config.zen", "config_properties")
load("../units.zen", "unit")
load("../utils.zen", "format_value")

# -----------------------------------------------------------------------------
# Component types
# -----------------------------------------------------------------------------

Diameter = enum("M2", "M2.5", "M3", "M4", "M5", "M6", "M8")
Standard = enum("DIN965", "ISO14580")
Plating = enum("TopBottom", "TopOnly", "Via")

# -----------------------------------------------------------------------------
# Component parameters
# -----------------------------------------------------------------------------

diameter = config("diameter", Diameter, convert = Diameter)
standard = config("standard", Standard, default = Standard("DIN965"), convert = Standard, optional = True)
plating = config("plating", Plating, default = Plating("TopBottom"), convert = Plating, optional = True)

# Properties â€“ combined and normalized
properties = config_properties({
    "value": format_value(diameter, standard, plating),
    "diameter": diameter,
    "standard": standard,
    "plating": plating,
})

# -----------------------------------------------------------------------------
# IO ports
# -----------------------------------------------------------------------------

P1 = io("P1", Net, optional = True)

# -----------------------------------------------------------------------------
# Helper functions
# -----------------------------------------------------------------------------

def _symbol(diameter: Diameter, standard: Standard | None = None, plating: Plating | None = None) -> dict:
    return {
        "library": "@kicad-symbols/Mechanical.kicad_sym",
        "name": "MountingHole_Pad",
    }

def _footprint(diameter: Diameter, standard: Standard | None = None, plating: Plating | None = None) -> str:
    """
    Returns the appropriate mounting hole footprint based on the parameters.

    Parameters:
    - diameter: The screw diameter (M2, M2.5, etc.)
    - standard: Optional screw head standard (DIN965, ISO14580)
    - plating: Optional plating type for the hole

    Returns:
    - Footprint path string
    """

    # For simplicity, we'll use basic mounting hole footprints
    # The full parametric mapping would require too many combinations
    basic_footprints = {
        Diameter("M2"): "@kicad-footprints/MountingHole.pretty/MountingHole_2.2mm_M2.kicad_mod",
        Diameter("M2.5"): "@kicad-footprints/MountingHole.pretty/MountingHole_2.7mm_M2.5.kicad_mod",
        Diameter("M3"): "@kicad-footprints/MountingHole.pretty/MountingHole_3.2mm_M3.kicad_mod",
        Diameter("M4"): "@kicad-footprints/MountingHole.pretty/MountingHole_4.3mm_M4.kicad_mod",
        Diameter("M5"): "@kicad-footprints/MountingHole.pretty/MountingHole_5.3mm_M5.kicad_mod",
        Diameter("M6"): "@kicad-footprints/MountingHole.pretty/MountingHole_6.4mm_M6.kicad_mod",
        Diameter("M8"): "@kicad-footprints/MountingHole.pretty/MountingHole_8.4mm_M8.kicad_mod",
    }

    if diameter not in basic_footprints:
        error("Invalid diameter: " + str(diameter))

    return basic_footprints[diameter]

# -----------------------------------------------------------------------------
# Component definition
# -----------------------------------------------------------------------------

Component(
    name = "MH",
    symbol = Symbol(**_symbol(diameter, standard, plating)),
    footprint = _footprint(diameter, standard, plating),
    prefix = "H",
    pins = {
        "1": P1,
    },
    properties = properties,
)
