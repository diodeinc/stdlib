load("../config.zen", "config_properties", "config_unit")
load("../units.zen", "Current", "Voltage")

# -----------------------------------------------------------------------------
# Component types
# -----------------------------------------------------------------------------

Package = enum("SOT-23-3")
MosfetChannel = enum("N", "P")
Mount = enum("SMD")

# -----------------------------------------------------------------------------
# Component parameters
# -----------------------------------------------------------------------------

# Required
package = config("package", Package, convert = Package)
channel = config("channel", MosfetChannel, convert = MosfetChannel)

# Optional
mount = config("mount", Mount, default = Mount("SMD"), optional = True)
vgs_max = config_unit("vgs_max", Voltage, optional = True)
vds_max = config_unit("vds_max", Voltage, optional = True)
id_max = config_unit("id_max", Current, optional = True)

# Properties â€“ combined and normalized
properties = config_properties({
    "mount": mount,
    "package": package,
    "channel": channel,
    "vgs_max": vgs_max,
    "vds_max": vds_max,
    "id_max": id_max,
})

# -----------------------------------------------------------------------------
# IO ports
# -----------------------------------------------------------------------------

D = io("D", Net)
G = io("G", Net)
S = io("S", Net)

# -----------------------------------------------------------------------------
# Helper functions
# -----------------------------------------------------------------------------

def _footprint(package: Package) -> str:
    kicad_footprints = {
        Package("SOT-23-3"): File("@kicad-footprints/Package_TO_SOT_SMD.pretty/SOT-23-3.kicad_mod"),
    }

    if package not in kicad_footprints:
        error("Invalid package: " + str(package))

    return kicad_footprints[package]

def _symbol(channel: MosfetChannel):
    symbols = {
        MosfetChannel("N"): Symbol(library = "@kicad-symbols/Device.kicad_sym", name = "Q_NMOS"),
        MosfetChannel("P"): Symbol(library = "@kicad-symbols/Device.kicad_sym", name = "Q_PMOS"),
    }

    if channel not in symbols:
        error("Invalid MOSFET channel: " + str(channel))

    return symbols[channel]

# -----------------------------------------------------------------------------
# Component definition
# -----------------------------------------------------------------------------

channel_type = str(channel.value).lower()

Component(
    name = "M",
    symbol = _symbol(channel),
    footprint = _footprint(package),
    prefix = "M",
    pins = {
        "G": G,
        "D": D,
        "S": S,
    },
    properties = properties,
)
